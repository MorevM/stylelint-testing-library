import{_ as s,c as i,ae as a,o as t}from"./chunks/framework.OCOI9reC.js";const u=JSON.parse('{"title":"createTestRuleConfig","description":"","frontmatter":{},"headers":[],"relativePath":"api/create-test-rule-config.md","filePath":"api/create-test-rule-config.md"}'),n={name:"api/create-test-rule-config.md"};function o(l,e,r,c,p,h){return t(),i("div",null,e[0]||(e[0]=[a(`<h1 id="createtestruleconfig" tabindex="-1"><code>createTestRuleConfig</code> <a class="header-anchor" href="#createtestruleconfig" aria-label="Permalink to &quot;\`createTestRuleConfig\`&quot;">​</a></h1><p>A function that allows you to create test groups to check configuration options of a rule.</p><h2 id="minimal-use-case" tabindex="-1">Minimal use case <a class="header-anchor" href="#minimal-use-case" aria-label="Permalink to &quot;Minimal use case&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Note</p><p>It is assumed that you have declared the <code>createTestRuleConfig</code> function globally as specified in the <code>Guide</code> section of the documentation and the <code>plugins</code> key is present within <code>createTestUtils</code>.</p><p><code>plugins</code> is a required property <strong>only if you have not specified it in <code>createTestUtils</code></strong>.</p></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { yourRule } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./your-rule.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ruleName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yourRule;</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> testRuleConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createTestRuleConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ ruleName });</span><span class="space"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">testRuleConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><p>You can always see the actual options in the source code <a href="https://github.com/morevm/stylelint-testing-library/src/types/create-test-rule-config-schema.ts" target="_blank" rel="noreferrer">here</a>.</p><h3 id="rulename" tabindex="-1"><code>ruleName</code> <a class="header-anchor" href="#rulename" aria-label="Permalink to &quot;\`ruleName\`&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">Info</p><p>This is the only required option <em>(if you have specified <code>plugins</code> in <code>createTestUtils</code>)</em>.</p></div><p>The name of the rule that is being tested.</p><p>Used for output in the console, and for binding the <code>config</code> property of the <code>testRuleConfig</code> function to a rule from the plugins list.</p><h3 id="plugins" tabindex="-1"><code>plugins</code> <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;\`plugins\`&quot;">​</a></h3><p>The same option as described in <a href="/stylelint-testing-library/api/create-test-utils.html#plugins"><code>createTestUtils &gt; Options &gt; plugins</code></a> but takes precedence over it if specified, allowing to overwrite the defaults for a particular rule.</p><p><strong>Required</strong> if <code>plugins</code> is not specified when declaring <code>createTestUtils</code>.</p><details class="details custom-block"><summary>Show original description</summary><p>Maps to <a href="https://stylelint.io/user-guide/configure/#plugins" target="_blank" rel="noreferrer">Stylelint&#39;s <code>plugins</code></a> configuration property, has the same signature. <br> Expected either the path to the JS file that provides your rule, or its contents, or an array of such elements in the case you are testing a plugin pack.</p></details>`,15)]))}const g=s(n,[["render",o]]);export{u as __pageData,g as default};
